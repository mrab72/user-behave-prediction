"""
Django settings for tubp project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
from kombu import Queue
import mongoengine
import os


def get_env_var(name, default=None, prefixed=True):
    """ Returns the value of the environment variable with th given name

    :param name: name of environment variable
    :param prefixed whether to add project name prefix to env var or not
    :param default: default value if the environment variable was not set
    :return: value of the given environment variable
    """
    key = '%s'
    if prefixed:
        key = 'TUBP_%s'
    return os.environ.get(key % name, default)


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&-+emmf1@9z+tn=)!+ywl*=%ki8n=y+68j#!=mtxn-i1db6y4h'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tubp.apps.dpu'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'tubp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tubp.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases
MONGO_DEFAULT_DB = "tubp"

MONGO_DATABASE = {
    'db': MONGO_DEFAULT_DB,
    'alias': 'default'
}

MONGO_URI = {
    'host': 'localhost',
    'port': 27017,
}

MONGO_DEFAULT_CREDENTIALS = {
    'username': "tubpUser",
    'password': "tubp1398",
}

MONGO_ADMIN_CREDENTIALS = {
    'username': "admin",
    'password': "admin1234"
}

MONGO_DATABASE.update(MONGO_DEFAULT_CREDENTIALS)
MONGO_DATABASE.update(MONGO_URI)
MONGO_CONNECTION_URI = "mongodb://%s:%s@%s:%d/%s" % (MONGO_DEFAULT_CREDENTIALS['username'],
                                                     MONGO_DEFAULT_CREDENTIALS['password'], MONGO_URI['host'],
                                                     MONGO_URI['port'], MONGO_DATABASE['db'])
mongoengine.connect(connect=False, **MONGO_DATABASE)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

DATABASES = {}
MONGO_DEFAULT_DB = "tubp"

DEFAULTS_TASK_NAME = "tubp.%s" % 'default'
DEFAULTS_QUEUE_NAME = "tubp.%s" % 'default'
DEFAULTS_ROUTING_KEY = "tubp.%s" % 'default'

# Broker settings
BROKER_URL = 'redis://localhost:6379/0'
CELERY_RESULT_BACKEND = 'redis://localhost:6379/'

CELERY_IGNORE_RESULT = False
CELERYD_HIJACK_ROOT_LOGGER = False
CELERY_STORE_ERRORS_EVEN_IF_IGNORED = False
CELERY_TIMEZONE = 'Asia/Tehran'
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_DEFAULT_QUEUE = 'tubp_default'
CELERY_DEFAULT_EXCHANGE = 'celery'
CELERY_DEFAULT_EXCHANGE_TYPE = 'direct'
CELERY_DEFAULT_ROUTING_KEY = 'tubp.default'
CELERY_REDIRECT_STDOUTS_LEVEL = 'INFO'
CELERYD_TASK_SOFT_TIME_LIMIT = 10 * 60

TUBP_DEFAULT_ROUTING_KEY = 'tubp.default'
TUBP_DATA_CAPTURE_ROUTING_KEY = 'tubp.test'
TUBP_DECODER_ROUTING_KEY = 'tubp.tubp_decoder'
TUBP_REMOVER_ROUTING_KEY = 'tubp.tubp_remover'
TUBP_SPLITTER_ROUTING_KEY = 'tubp.tubp_splitter'
TUBP_IMAGE_CONVERTOR_ROUTING_KEY = 'tubp.tubp_image_converter'
TUBP_FLOWS_PROCESS_ROUTING_KEY = 'tubp.tubp_flow_process'

CELERY_QUEUES = (
    Queue("tubp_data_capture", routing_key=TUBP_DATA_CAPTURE_ROUTING_KEY),
    Queue("tubp_decoder", routing_key=TUBP_DECODER_ROUTING_KEY),
    Queue("tubp_remover", routing_key=TUBP_REMOVER_ROUTING_KEY),
    Queue("tubp_splitter", routing_key=TUBP_SPLITTER_ROUTING_KEY),
    Queue("tubp_image_converter", routing_key=TUBP_IMAGE_CONVERTOR_ROUTING_KEY),
    Queue("tubp_flow_process", routing_key=TUBP_FLOWS_PROCESS_ROUTING_KEY),
)

REDIS_HOST = 'localhost'
REDIS_PORT = '6379'

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.dirname(BASE_DIR)

TUBP_REDIS_CONFIG = {
    'host': 'localhost',
    'port': 6379,
    'db': 0,
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'formatters': {
        'standard': {
            'format': '%(asctime)s %(name)-20s %(levelname)-8s %(message)s',
        },
    },
    'handlers': {
        'null': {
            'class': 'logging.NullHandler',
        },
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'standard',
        },
        'file': {
            'level': 'DEBUG',
            'class': 'cloghandler.ConcurrentRotatingFileHandler',
            'formatter': 'standard',
            'maxBytes': 40 * 1024 * 1024,  # 40 MB
            'filename': os.path.join(PROJECT_ROOT, 'tubp', 'logs', 'tubp.log'),
        },
    },
    'loggers': {
        '': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': False,
        },
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True,
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
        'tubp': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True,
        },

    }
}

POTENTIAL_IPS = ['84.241.4.36',
                 '84.241.9.90',
                 '84.241.2.87',
                 '84.241.0.72',
                 '37.148.1.60',
                 '84.241.0.93',
                 '84.241.9.79',
                 '84.241.28.7',
                 '84.241.4.73',
                 '192.168.1.8']
